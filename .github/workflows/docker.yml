name: Docker Build and Publish

on:
  push:
    branches: ["main"]
    tags:
      - v*
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/sova-reth

jobs:
  extract-version:
    runs-on: ubuntu-latest
    steps:
      - name: Extract version (if main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "VERSION=latest" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=" >> $GITHUB_ENV
      - name: Extract version (if tagged release)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=" >> $GITHUB_ENV
    outputs:
      VERSION: ${{ env.VERSION }}
      VERSION_SUFFIX: ${{ env.VERSION_SUFFIX }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [extract-version]
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu
      - uses: taiki-e/install-action@cross
      - uses: extractions/setup-just@v1
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      
      - name: Log in to Docker
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io --username ${{ github.actor }} --password-stdin
      
      - name: Set up Docker builder
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64,amd64
          docker buildx create --use --name cross-builder
      
      - name: Build and push Docker image
        run: |
          just docker-build-push ${{ needs.extract-version.outputs.VERSION }}