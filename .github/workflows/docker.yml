name: Docker Build and Publish

on:
  push:
    branches: ["main"]
    tags:
      - v*
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/sova-reth

jobs:
  extract-version:
    runs-on: ubuntu-latest
    steps:
      - name: Extract version (if main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "VERSION=latest" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=" >> $GITHUB_ENV
      - name: Extract version (if tagged release)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=" >> $GITHUB_ENV
    outputs:
      VERSION: ${{ env.VERSION }}
      VERSION_SUFFIX: ${{ env.VERSION_SUFFIX }}

  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [extract-version]
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.extract-version.outputs.VERSION }}${{ needs.extract-version.outputs.VERSION_SUFFIX }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max