name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install Protobuf Compiler
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew update && brew install protobuf
        fi

    - name: Build
      run: cargo build --verbose
  
  windows-build:
    name: Windows Build
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-pc-windows-gnu
      - uses: taiki-e/install-action@cross
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64 protobuf-compiler
      - name: Build for Windows
        run: cargo check --target x86_64-pc-windows-gnu

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Protobuf Compiler
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy
    
    - name: Clippy check
      run: cargo clippy -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    
    - name: Check formatting
      run: cargo fmt -- --check