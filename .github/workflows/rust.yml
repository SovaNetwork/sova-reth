name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.83.0"
        components: clippy, rustfmt

    - name: Install Protobuf Compiler
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew update && brew install protobuf
        fi

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: true

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Clippy check
      run: cargo clippy --workspace --all-targets -- -D warnings

    - name: Run tests
      run: cargo test --workspace

    - name: Build
      run: cargo build --workspace
  
  windows-build:
    name: Windows Build
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.83.0"
          target: x86_64-pc-windows-gnu
          components: clippy, rustfmt
      
      - uses: rui314/setup-mold@v1
      - uses: taiki-e/install-action@cross
      
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64 protobuf-compiler
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Clippy check
        run: cargo clippy --workspace --target x86_64-pc-windows-gnu --all-targets -- -D warnings
      
      - name: Build for Windows
        run: |
          cargo check --workspace --target x86_64-pc-windows-gnu
          cargo build --workspace --target x86_64-pc-windows-gnu